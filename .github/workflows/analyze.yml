name: Analyze WinGo

on:
  workflow_dispatch:
    inputs:
      limit:
        description: "Rows to load from Neon"
        required: false
        default: "2000"
      preset:
        description: "Signal frequency preset"
        required: false
        default: "balanced"
        type: choice
        options:
          - conservative
          - balanced
          - aggressive
          - very_aggressive
      max_signals:
        description: "Max signals per analysis run"
        required: false
        default: "5"
        type: number
  # Every 10 minutes during active hours (9AM-1:30AM IST = 03:30-20:00 UTC)
  # Sleep time excluded: 1:30AM-9AM IST (20:00-03:30 UTC)
  schedule:
    - cron: "*/10 4-19 * * *"   # 9:30AM-1:00AM IST every 10 min
    - cron: "0,10,20,30 3 * * *"  # 9:00AM-9:30AM IST every 10 min  
    - cron: "0 20 * * *"        # 1:30AM IST final run

concurrency:
  group: analyze-wingo
  cancel-in-progress: true

jobs:
  run-analyzer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Fresh data guarantee timing (1m10s post-period)
        run: |
          echo "üïê Calculating timing to guarantee fresh period data..."
          current_second=$(date +%S)
          target_seconds=70  # 1m10s to ensure period completion + scraping
          
          if [ $current_second -le $target_seconds ]; then
            sleep_time=$((target_seconds - current_second))
          else
            sleep_time=$((60 + target_seconds - current_second))
          fi
          
          echo "‚è±  Sleeping ${sleep_time}s to guarantee fresh data (target: ${target_seconds}s)..."
          sleep $sleep_time
          echo "‚úÖ Fresh data timing reached - period guaranteed complete ($(date +%S)s)"

      - name: Run momentum analysis (optimized timing)
        env:
          NEON_CONN_STR: ${{ secrets.NEON_CONN_STR }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          PRESET: ${{ github.event.inputs.preset || 'balanced' }}
          MAX_SIGNALS: ${{ github.event.inputs.max_signals || 3 }}
          MIN_SOURCES: ${{ github.event.inputs.min_sources || 2 }}
          COLOR_PROB: ${{ github.event.inputs.color_prob_threshold || 0.68 }}
          LIMIT: ${{ github.event.inputs.limit || 2000 }}
        run: |
          echo "üöÄ Starting WinGo Momentum Analysis (Mid-period optimized)"
          python analyze.py \
            --source db \
            --preset $PRESET \
            --max_signals $MAX_SIGNALS \
            --min_sources $MIN_SOURCES \
            --color_prob_threshold $COLOR_PROB \
            --limit $LIMIT \
            --enable_alert \
            --log_to_db \
            --fast_mode \
            --mid_period_mode
