name: Analyze WinGo

on:
  workflow_dispatch:
    inputs:
      limit:
        description: "Rows to load from Neon"
        required: false
        default: "2000"
      preset:
        description: "Signal frequency preset"
        required: false
        default: "aggressive"
        type: choice
        options:
          - conservative
          - balanced
          - aggressive
          - very_aggressive
      max_signals:
        description: "Max signals per analysis run"
        required: false
        default: "5"
        type: number
  # 10-min schedule during awake hours only (IST 09:00â€“01:30)
  # IST 09:00 = 03:30 UTC start; run every 10 min until 20:00 UTC (01:30 IST)
  schedule:
    - cron: "30-59/10 3 * * *" # 09:00â€“09:50 IST (03:30, 03:40, 03:50 UTC)
    - cron: "35-59/10 3 * * *" # Backup offset at 09:05â€“09:55 IST (03:35, 03:45, 03:55 UTC)
    - cron: "*/10 4-19 * * *"  # 10:00â€“01:00 IST every 10 min
    - cron: "5-59/10 4-19 * * *" # Backup offset at :05 each 10-min slot
    - cron: "0 20 * * *"       # 01:30 IST final run

concurrency:
  group: analyze-wingo
  cancel-in-progress: true

jobs:
  run-analyzer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run momentum analysis
        env:
          NEON_CONN_STR: ${{ secrets.NEON_CONN_STR }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          PRESET: ${{ github.event.inputs.preset || 'aggressive' }}
          MAX_SIGNALS: ${{ github.event.inputs.max_signals || 5 }}
          LIMIT: ${{ github.event.inputs.limit || 2000 }}
        run: |
          echo "ðŸš€ Starting WinGo Momentum Analysis (Preset: $PRESET)"
          python analyze.py \
            --source db \
            --preset $PRESET \
            --max_signals $MAX_SIGNALS \
            --limit $LIMIT \
            --enable_alert \
            --log_to_db
