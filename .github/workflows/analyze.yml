name: WinGo Analysis

on:
  schedule:
    # Run every 10 minutes
    - cron: '*/10 * * * *'
  workflow_dispatch:
    inputs:
      preset:
        description: "Signal frequency preset"
        required: false
        default: 'balanced'
        type: choice
        options:
          - conservative
          - balanced
          - aggressive
          - very_aggressive
      max_signals:
        description: "Max signals per run"
        required: false
        default: '3'
      enable_fast_mode:
        description: "Enable fast mode"
        required: false
        default: true
        type: boolean
      ignore_quiet_hours:
        description: "Ignore quiet hours (1-9 AM IST)"
        required: false
        default: false
        type: boolean

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Download latest model
      uses: actions/download-artifact@v4
      with:
        name: trained-model
        path: models/
      continue-on-error: true # Don't fail if no model exists yet
      
    - name: Run analysis
      env:
        NEON_CONN_STR: ${{ secrets.NEON_CONN_STR }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "üöÄ Starting WinGo Analysis..."
        echo "üìä Configuration:"
        echo "  - Source: db"
        echo "  - Limit: 2000"
        echo "  - Preset: ${{ github.event.inputs.preset || 'balanced' }}"
        echo "  - Max Signals: ${{ github.event.inputs.max_signals || '3' }}"
        echo "  - Fast Mode: ${{ github.event.inputs.enable_fast_mode || 'true' }}"
        echo "  - Ignore Quiet Hours: ${{ github.event.inputs.ignore_quiet_hours || 'false' }}"
        echo "=========================================="
        
        # Check if environment variables are set
        if [ -z "$NEON_CONN_STR" ]; then
          echo "‚ùå Error: NEON_CONN_STR environment variable not set!"
          exit 1
        fi
        
        if [ -z "$TELEGRAM_BOT_TOKEN" ]; then
          echo "‚ö†Ô∏è  Warning: TELEGRAM_BOT_TOKEN not set - alerts will be disabled"
        fi
        
        if [ -z "$TELEGRAM_CHAT_ID" ]; then
          echo "‚ö†Ô∏è  Warning: TELEGRAM_CHAT_ID not set - alerts will be disabled"
        fi
        
        echo "üîó Environment variables checked"
        echo "=========================================="
        
        # Build flags from inputs
        FAST_FLAG=$([[ "${{ github.event.inputs.enable_fast_mode }}" == "false" ]] && echo "" || echo "--fast_mode")
        SLEEP_FLAG=$([[ "${{ github.event.inputs.ignore_quiet_hours }}" == "true" ]] && echo "--disable_sleep_window" || echo "")

        # Run the analyzer with error handling
        python analyze.py \
          --source db \
          --limit 2000 \
          --preset "${{ github.event.inputs.preset || 'balanced' }}" \
          --max_signals "${{ github.event.inputs.max_signals || '3' }}" \
          $FAST_FLAG $SLEEP_FLAG || {
          echo "‚ùå Analysis failed with exit code $?"
          exit 1
        }
        
        echo "=========================================="
        echo "‚úÖ Analysis completed successfully!"
        
    - name: Upload updated model
      uses: actions/upload-artifact@v4
      with:
        name: trained-model
        path: models/
        retention-days: 7